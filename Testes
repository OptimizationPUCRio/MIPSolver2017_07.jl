using JuMP
using Cbc

#Custo Unitário
c = [2; 3; 2; 5; 6]


#Custo Fixo
f = [1; 3; 1; 5; 10]

m= Model(solver = CbcSolver())

@variable(m, x[i=1:5]>=0)

@variable(m,y[i=1:5], Bin)

@constraint(m, sum(x[j] for j=1:5) >=10)

@constraint(m,x[1]<=5*y[1])

@constraint(m,x[2]<=4*y[2])

@constraint(m,x[3]<=3*y[3])

@constraint(m,x[4]<=2*y[4])

@constraint(m,x[5]<=1*y[5])

@objective(m, Min, sum(f[j]*y[j]+c[j]*x[j] for j=1:5))

#-------------------------------------

pontosextra= 0
        
#um ponto não é coberto por nenhum subconjunto        
        
S1=[1 0 0 1 ones(1,pontosextra)]
S2=[1 1 0 0 ones(1,pontosextra)]
S3=[0 1 0 1 ones(1,pontosextra)]

c=[4 3 2]
        
A=[S1' S2' S3']
        
m = Model(solver = CbcSolver())
@variable(m, x[i=1:3], Bin)
@constraints(m, begin
  constrain[i=1:4+pontosextra], sum(A[i,j]*x[j] for j=1:3)>= 1
  end)
@objective(m, Min, sum(c[j]*x[j] for j=1:3))


#-------------------------------------

pontosextra= 50

S1=[1 0 1 1 ones(1,pontosextra)]
S2=[1 1 0 0 ones(1,pontosextra)]
S3=[0 1 0 1 ones(1,pontosextra)]

c=[4 3 2]
        
A=[S1' S2' S3']
        
m = Model(solver = CbcSolver())
@variable(m, x[i=1:3], Bin)
@constraints(m, begin
  constrain[i=1:4+pontosextra], sum(A[i,j]*x[j] for j=1:3)>= 1
  end)
@objective(m, Min, sum(c[j]*x[j] for j=1:3))

# 6 (1,0,1)


#---------------------

#Produção com custo fixo Inviavel



vari=50


m= Model(solver = CbcSolver())

@variable(m, x[i=1:vari]>=0)

@variable(m,y[i=1:vari], Bin)

@constraint(m, sum(x[j] for j=1:vari) >= 2*vari)

@constraints(m, begin
  constrain[i=1:vari], x[i] <= 1*y[i]
  end)

@objective(m, Min, sum(j*y[j]+(vari-j)*x[j] for j=1:vari))

#------------------------------------------

#As 49 últimas tem que estar ligadas (y=1)

vari=500


m= Model(solver = CbcSolver())

@variable(m, x[i=1:vari]>=0)

@variable(m,y[i=1:vari], Bin)

@constraint(m, sum(x[j] for j=1:vari) >= vari)

@constraints(m, begin
  constrain[i=1:vari], x[i] <= 10*y[i]
  end)

@objective(m, Min, sum(j*y[j]+(vari-j)*x[j] for j=1:vari))
